var search_data = {"index":{"searchIndex":["cross","jiji","model","agents","agent","property","graphing","graph","graphfactory","notification","notificator","trading","abstractpositionresult","account","brokers","abstractbroker","brokerproxy","closedposition","closingpolicy","economiccalendarinformation","order","orderresult","pair","position","positions","rate","reducedposition","tick","value","signals","bollingerbands","dmi","exponentialmovingaverage","macd","momentum","movingaverage","roc","rsi","rangesignal","vector","weightedmovingaverage","<<()","[]()","bollinger_bands()","buy()","calculate()","cancel()","cancel_order()","close()","close_position()","collect_properties()","collect_properties_for_modify()","compose_text_mail()","create()","create()","cross_down?()","cross_up?()","description()","destroy()","dmi()","down?()","each()","ema()","execute_action()","extract_stop_loss_from_order()","extract_stop_loss_from_trade()","extract_take_profit_from_order()","extract_take_profit_from_trade()","extract_trailing_amount_from_order()","extract_trailing_amount_from_trade()","extract_trailing_stop_from_order()","extract_trailing_stop_from_trade()","from_h()","include?()","length()","load_positions()","ma()","macd()","modify()","modify()","modify_order()","modify_position()","momentum()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next_data()","next_data()","next_tick()","orders()","pairs()","positions()","post_create()","properties=()","property_infos()","push_notification()","refresh_account()","restore_state()","restore_state()","restore_state()","retrieve_rates()","roc()","rsi()","sell()","setup_data_savers()","state()","state()","state()","tick()","to_h()","up?()","values()","vector()","wma()"],"longSearchIndex":["cross","jiji","jiji::model","jiji::model::agents","jiji::model::agents::agent","jiji::model::agents::agent::property","jiji::model::graphing","jiji::model::graphing::graph","jiji::model::graphing::graphfactory","jiji::model::notification","jiji::model::notification::notificator","jiji::model::trading","jiji::model::trading::abstractpositionresult","jiji::model::trading::account","jiji::model::trading::brokers","jiji::model::trading::brokers::abstractbroker","jiji::model::trading::brokers::brokerproxy","jiji::model::trading::closedposition","jiji::model::trading::closingpolicy","jiji::model::trading::economiccalendarinformation","jiji::model::trading::order","jiji::model::trading::orderresult","jiji::model::trading::pair","jiji::model::trading::position","jiji::model::trading::positions","jiji::model::trading::rate","jiji::model::trading::reducedposition","jiji::model::trading::tick","jiji::model::trading::tick::value","signals","signals::bollingerbands","signals::dmi","signals::exponentialmovingaverage","signals::macd","signals::momentum","signals::movingaverage","signals::roc","signals::rsi","signals::rangesignal","signals::vector","signals::weightedmovingaverage","jiji::model::graphing::graph#<<()","jiji::model::trading::tick#[]()","signals#bollinger_bands()","jiji::model::trading::brokers::brokerproxy#buy()","signals::vector#calculate()","jiji::model::trading::order#cancel()","jiji::model::trading::brokers::abstractbroker#cancel_order()","jiji::model::trading::position#close()","jiji::model::trading::brokers::abstractbroker#close_position()","jiji::model::trading::order#collect_properties()","jiji::model::trading::order#collect_properties_for_modify()","jiji::model::notification::notificator#compose_text_mail()","jiji::model::graphing::graphfactory#create()","jiji::model::trading::closingpolicy::create()","cross#cross_down?()","cross#cross_up?()","jiji::model::agents::agent::description()","jiji::model::graphing::graph#destroy()","signals#dmi()","cross#down?()","jiji::model::trading::tick#each()","signals#ema()","jiji::model::agents::agent#execute_action()","jiji::model::trading::closingpolicy::extract_stop_loss_from_order()","jiji::model::trading::closingpolicy::extract_stop_loss_from_trade()","jiji::model::trading::closingpolicy::extract_take_profit_from_order()","jiji::model::trading::closingpolicy::extract_take_profit_from_trade()","jiji::model::trading::closingpolicy::extract_trailing_amount_from_order()","jiji::model::trading::closingpolicy::extract_trailing_amount_from_trade()","jiji::model::trading::closingpolicy::extract_trailing_stop_from_order()","jiji::model::trading::closingpolicy::extract_trailing_stop_from_trade()","jiji::model::trading::order#from_h()","jiji::model::trading::tick#include?()","jiji::model::trading::tick#length()","jiji::model::trading::brokers::abstractbroker#load_positions()","signals#ma()","signals#macd()","jiji::model::trading::order#modify()","jiji::model::trading::position#modify()","jiji::model::trading::brokers::abstractbroker#modify_order()","jiji::model::trading::brokers::abstractbroker#modify_position()","signals#momentum()","cross::new()","jiji::model::agents::agent::property::new()","signals::bollingerbands::new()","signals::dmi::new()","signals::exponentialmovingaverage::new()","signals::macd::new()","signals::roc::new()","signals::rsi::new()","signals::rangesignal::new()","cross#next_data()","signals::rangesignal#next_data()","jiji::model::agents::agent#next_tick()","jiji::model::trading::brokers::abstractbroker#orders()","jiji::model::trading::brokers::abstractbroker#pairs()","jiji::model::trading::brokers::abstractbroker#positions()","jiji::model::agents::agent#post_create()","jiji::model::agents::agent#properties=()","jiji::model::agents::agent::property_infos()","jiji::model::notification::notificator#push_notification()","jiji::model::trading::brokers::abstractbroker#refresh_account()","jiji::model::agents::agent#restore_state()","signals::dmi#restore_state()","signals::macd#restore_state()","jiji::model::trading::brokers::abstractbroker#retrieve_rates()","signals#roc()","signals#rsi()","jiji::model::trading::brokers::brokerproxy#sell()","jiji::model::graphing::graph#setup_data_savers()","jiji::model::agents::agent#state()","signals::dmi#state()","signals::macd#state()","jiji::model::trading::brokers::abstractbroker#tick()","jiji::model::agents::agent::property#to_h()","cross#up?()","jiji::model::agents::agent::property#values()","signals#vector()","signals#wma()"],"info":[["Cross","","Cross.html","","<p>交差状態を判定するユーティリティ\n<p>先行指標と遅行指標を受け取って、クロスアップ/クロスダウンを判定するユーティリティです。\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&#39;cross&#39;</span>\n\n<span class=\"ruby-identifier\">cross</span> = <span class=\"ruby-constant\">Cross</span>.<span class=\"ruby-identifier\">new</span>\n\n<span class=\"ruby-comment\"># 先行指標、遅行指標を受け取って状態を返す。 ...</span>\n</pre>\n"],["Jiji","","Jiji.html","",""],["Jiji::Model","","Jiji/Model.html","",""],["Jiji::Model::Agents","","Jiji/Model/Agents.html","",""],["Jiji::Model::Agents::Agent","","Jiji/Model/Agents/Agent.html","",""],["Jiji::Model::Agents::Agent::Property","","Jiji/Model/Agents/Agent/Property.html","","<p>エージェントのプロパティ\n"],["Jiji::Model::Graphing","","Jiji/Model/Graphing.html","","<p>frozen_string_literal: true\n"],["Jiji::Model::Graphing::Graph","","Jiji/Model/Graphing/Graph.html","",""],["Jiji::Model::Graphing::GraphFactory","","Jiji/Model/Graphing/GraphFactory.html","",""],["Jiji::Model::Notification","","Jiji/Model/Notification.html","",""],["Jiji::Model::Notification::Notificator","","Jiji/Model/Notification/Notificator.html","",""],["Jiji::Model::Trading","","Jiji/Model/Trading.html","",""],["Jiji::Model::Trading::AbstractPositionResult","","Jiji/Model/Trading/AbstractPositionResult.html","",""],["Jiji::Model::Trading::Account","","Jiji/Model/Trading/Account.html","","<p>口座情報\n"],["Jiji::Model::Trading::Brokers","","Jiji/Model/Trading/Brokers.html","",""],["Jiji::Model::Trading::Brokers::AbstractBroker","","Jiji/Model/Trading/Brokers/AbstractBroker.html","",""],["Jiji::Model::Trading::Brokers::BrokerProxy","","Jiji/Model/Trading/Brokers/BrokerProxy.html","",""],["Jiji::Model::Trading::ClosedPosition","","Jiji/Model/Trading/ClosedPosition.html","","<p>全決済された建玉の情報\n"],["Jiji::Model::Trading::ClosingPolicy","","Jiji/Model/Trading/ClosingPolicy.html","","<p>決済条件\n"],["Jiji::Model::Trading::EconomicCalendarInformation","","Jiji/Model/Trading/EconomicCalendarInformation.html","","<p>経済カレンダー情報\n"],["Jiji::Model::Trading::Order","","Jiji/Model/Trading/Order.html","","<p>注文 ※各フィールドについて、詳しくは &lt;a\nhref=“developer.oanda.com/rest-live-v20/order-df/”>公式リファレンス</a&gt; を参照ください。\n…\n"],["Jiji::Model::Trading::OrderResult","","Jiji/Model/Trading/OrderResult.html","","<p>注文結果\n"],["Jiji::Model::Trading::Pair","","Jiji/Model/Trading/Pair.html","","<p>通貨ペア\n"],["Jiji::Model::Trading::Position","","Jiji/Model/Trading/Position.html","","<p>建玉\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">position</span> = <span class=\"ruby-identifier\">broker</span>.<span class=\"ruby-identifier\">positions</span>[<span class=\"ruby-value\">0</span>]\n\n<span class=\"ruby-identifier\">position</span>.<span class=\"ruby-identifier\">internal_id</span>     <span class=\"ruby-comment\"># 一意な識別子</span>\n<span class=\"ruby-identifier\">position</span>.<span class=\"ruby-identifier\">pair_name</span>       <span class=\"ruby-comment\"># 通貨ペア 例) ...</span>\n</pre>\n"],["Jiji::Model::Trading::Positions","","Jiji/Model/Trading/Positions.html","","<p>建玉一覧\n\n<pre>positions = broker.positions # Positions オブジェクトが返されます\npositions.length\npositions.find { |o| o.sell_or_buy ...</pre>\n"],["Jiji::Model::Trading::Rate","","Jiji/Model/Trading/Rate.html","","<p>四本値。 open, close, high, low の各値は Tick::Value 型になります。\n"],["Jiji::Model::Trading::ReducedPosition","","Jiji/Model/Trading/ReducedPosition.html","","<p>部分的に決済された建玉の情報\n"],["Jiji::Model::Trading::Tick","","Jiji/Model/Trading/Tick.html","","<p>レート情報\n"],["Jiji::Model::Trading::Tick::Value","","Jiji/Model/Trading/Tick/Value.html","",""],["Signals","","Signals.html","","<p>frozen_string_literal: true\n"],["Signals::BollingerBands","","Signals/BollingerBands.html","","<p>ボリンジャーバンド\n"],["Signals::DMI","","Signals/DMI.html","","<p>DMI\n"],["Signals::ExponentialMovingAverage","","Signals/ExponentialMovingAverage.html","","<p>指数移動平均\n"],["Signals::MACD","","Signals/MACD.html","","<p>MACD\n"],["Signals::Momentum","","Signals/Momentum.html","","<p>傾き\n"],["Signals::MovingAverage","","Signals/MovingAverage.html","","<p>移動平均\n"],["Signals::ROC","","Signals/ROC.html","","<p>ROC\n"],["Signals::RSI","","Signals/RSI.html","","<p>RSI\n"],["Signals::RangeSignal","","Signals/RangeSignal.html","","<p>一定期間のレートデータを元に値を算出するシグナルの基底クラス\n"],["Signals::Vector","","Signals/Vector.html","","<p>傾き(最小二乗法を利用)\n"],["Signals::WeightedMovingAverage","","Signals/WeightedMovingAverage.html","","<p>加重移動平均\n"],["<<","Jiji::Model::Graphing::Graph","Jiji/Model/Graphing/Graph.html#method-i-3C-3C","(values)","<p>グラフにデータを追加します。\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">graph</span> <span class=\"ruby-operator\">&lt;&lt;</span> [<span class=\"ruby-value\">10</span>, <span class=\"ruby-value\">20</span>]\n</pre>\n<p>values &mdash; 値の配列\n"],["[]","Jiji::Model::Trading::Tick","Jiji/Model/Trading/Tick.html#method-i-5B-5D","(pair_name)","<p>通貨ペアに対応する Tick::Value を取得します\n<p>pair_name &mdash; 通貨ペア名\n<p>戻り値 &mdash; Tick::Value\n"],["bollinger_bands","Signals","Signals.html#method-i-bollinger_bands","(data, pivot = [0, 1, 2], &block)","<p>ボリンジャーバンドを計算します。\n\n<pre>+2σ＝移動平均＋標準偏差×2\n+σ＝移動平均＋標準偏差\n-σ＝移動平均-標準偏差\n-2σ＝移動平均-標準偏差×2\n標準偏差＝√((各値-値の期間中平均値)の2乗を期間分全部加えたもの)/ ...</pre>\n"],["buy","Jiji::Model::Trading::Brokers::BrokerProxy","Jiji/Model/Trading/Brokers/BrokerProxy.html#method-i-buy","(pair_name, units, type = :market, options = {})","<p>買い注文を行います\n<p>pair_name &mdash; 通貨ペア名\n<p>units &mdash; 注文単位\n"],["calculate","Signals::Vector","Signals/Vector.html#method-i-calculate","(data)",""],["cancel","Jiji::Model::Trading::Order","Jiji/Model/Trading/Order.html#method-i-cancel","()","<p>注文をキャンセルします。\n"],["cancel_order","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-cancel_order","(order)","<p>注文をキャンセルします。\n<p>order &mdash; 注文\n\n"],["close","Jiji::Model::Trading::Position","Jiji/Model/Trading/Position.html#method-i-close","()","<p>建玉を決済します。\n"],["close_position","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-close_position","(position)","<p>建玉を決済します。\n<p>position &mdash; 建玉\n<p>戻り値 &mdash; ClosedPosition\n"],["collect_properties","Jiji::Model::Trading::Order","Jiji/Model/Trading/Order.html#method-i-collect_properties","(keys = instance_variables.map { |n| n[1..-1].to_sym })",""],["collect_properties_for_modify","Jiji::Model::Trading::Order","Jiji/Model/Trading/Order.html#method-i-collect_properties_for_modify","()",""],["compose_text_mail","Jiji::Model::Notification::Notificator","Jiji/Model/Notification/Notificator.html#method-i-compose_text_mail","(to, title, body, from = Jiji::Messaging::MailComposer::FROM)","<p>メールを送信します。\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">notifier</span>.<span class=\"ruby-identifier\">compose_text_mail</span>(<span class=\"ruby-string\">&#39;foo@example.com&#39;</span>,\n <span class=\"ruby-string\">&#39;テスト&#39;</span>, <span class=\"ruby-string\">&#39;テスト本文&#39;</span>, <span class=\"ruby-string\">&#39;jiji@unageanu.net&#39;</span>)\n</pre>\n<p>to &mdash; 送信先メールアドレス …\n"],["create","Jiji::Model::Graphing::GraphFactory","Jiji/Model/Graphing/GraphFactory.html#method-i-create","(label, type = :line, aggregation_type = :first, colors = [], axises = [])","<p>グラフを作成します。\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@rsi_graph</span> = <span class=\"ruby-identifier\">graph_factory</span>.<span class=\"ruby-identifier\">create</span>(<span class=\"ruby-string\">&#39;RSI&#39;</span>,\n  :<span class=\"ruby-identifier\">line</span>, :<span class=\"ruby-identifier\">average</span>, [<span class=\"ruby-string\">&#39;#666699&#39;</span>], [<span class=\"ruby-value\">30</span>, <span class=\"ruby-value\">70</span>])\n</pre>\n<p>label &mdash; グラフの名前 …\n"],["create","Jiji::Model::Trading::ClosingPolicy","Jiji/Model/Trading/ClosingPolicy.html#method-c-create","(options)","<p>for internal use.\n"],["cross_down?","Cross","Cross.html#method-i-cross_down-3F","()","<p>クロスダウン状態かどうか判定します。\n<p>戻り値 &mdash; 「先行指標 &gt; 遅行指標」 から 「先行指標 &lt; 遅行指標」 になったらtrue\n\n"],["cross_up?","Cross","Cross.html#method-i-cross_up-3F","()","<p>クロスアップ状態かどうか判定します。\n<p>戻り値 &mdash; 「先行指標 &lt; 遅行指標」 から 「先行指標 &gt; 遅行指標」 になったらtrue\n\n"],["description","Jiji::Model::Agents::Agent","Jiji/Model/Agents/Agent.html#method-c-description","()","<p>エージェントの説明を返します。\n<p>必要に応じて実装してください。\n\n"],["destroy","Jiji::Model::Graphing::Graph","Jiji/Model/Graphing/Graph.html#method-i-destroy","(*args)",""],["dmi","Signals","Signals.html#method-i-dmi","(data)","<p>DMIを計算します。\n\n<pre>高値更新  ...  前日高値より当日高値が高かった時その差\n安値更新  ...  前日安値より当日安値が安かった時その差\nDM        ...  高値更新が安値更新より大きかった時高値更新の値。逆の場合は０ ...</pre>\n"],["down?","Cross","Cross.html#method-i-down-3F","()","<p>下降トレンド中かどうか判定します。\n<p>戻り値 &mdash; 「先行指標 &lt; 遅行指標」 ならtrue\n\n"],["each","Jiji::Model::Trading::Tick","Jiji/Model/Trading/Tick.html#method-i-each","(&block)","<p>レートを列挙します\n"],["ema","Signals","Signals.html#method-i-ema","(data, smoothing_coefficient = 0.1)","<p>指数移動平均値を計算します。\n<p>data &mdash; 値の配列。\n<p>smoothing_coefficient &mdash; 平滑化係数\n"],["execute_action","Jiji::Model::Agents::Agent","Jiji/Model/Agents/Agent.html#method-i-execute_action","(action)","<p>アクションを実行します。\n<p>action &mdash; アクションの識別子\n<p>戻り値 &mdash; 応答メッセージ。画面からアクションを実行した時のレスポンスとして 表示されます。\n"],["extract_stop_loss_from_order","Jiji::Model::Trading::ClosingPolicy","Jiji/Model/Trading/ClosingPolicy.html#method-c-extract_stop_loss_from_order","(stop_loss_on_fill, price)",""],["extract_stop_loss_from_trade","Jiji::Model::Trading::ClosingPolicy","Jiji/Model/Trading/ClosingPolicy.html#method-c-extract_stop_loss_from_trade","(trade)",""],["extract_take_profit_from_order","Jiji::Model::Trading::ClosingPolicy","Jiji/Model/Trading/ClosingPolicy.html#method-c-extract_take_profit_from_order","(take_profit_on_fill)",""],["extract_take_profit_from_trade","Jiji::Model::Trading::ClosingPolicy","Jiji/Model/Trading/ClosingPolicy.html#method-c-extract_take_profit_from_trade","(trade)",""],["extract_trailing_amount_from_order","Jiji::Model::Trading::ClosingPolicy","Jiji/Model/Trading/ClosingPolicy.html#method-c-extract_trailing_amount_from_order","(trailing_stop_loss_on_fill)",""],["extract_trailing_amount_from_trade","Jiji::Model::Trading::ClosingPolicy","Jiji/Model/Trading/ClosingPolicy.html#method-c-extract_trailing_amount_from_trade","(trade)",""],["extract_trailing_stop_from_order","Jiji::Model::Trading::ClosingPolicy","Jiji/Model/Trading/ClosingPolicy.html#method-c-extract_trailing_stop_from_order","(trailing_stop_loss_on_fill)",""],["extract_trailing_stop_from_trade","Jiji::Model::Trading::ClosingPolicy","Jiji/Model/Trading/ClosingPolicy.html#method-c-extract_trailing_stop_from_trade","(trade)",""],["from_h","Jiji::Model::Trading::Order","Jiji/Model/Trading/Order.html#method-i-from_h","(hash)",""],["include?","Jiji::Model::Trading::Tick","Jiji/Model/Trading/Tick.html#method-i-include-3F","(pair_name)","<p>通貨ペアに対応する Tick::Value が含まれるか評価します。\n<p>pair_name &mdash; 通貨ペア名\n<p>戻り値 &mdash; boolean\n"],["length","Jiji::Model::Trading::Tick","Jiji/Model/Trading/Tick.html#method-i-length","()","<p>レートの要素数を取得します\n<p>戻り値 &mdash; レートの要素数\n\n"],["load_positions","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-load_positions","()","<p>建玉情報を更新します。\n<p>証券会社へのアクセスを削減するため、建玉情報は1分間キャッシュされます。 最新の情報を参照したい場合、このAPIを呼び出しください。\n<p>戻り値 &mdash; Positions\n"],["ma","Signals","Signals.html#method-i-ma","(data)","<p>移動平均値を計算します。\n<p>data &mdash; 値の配列。\n<p>戻り値 &mdash; 移動平均値\n"],["macd","Signals","Signals.html#method-i-macd","(data, short_range, long_range, smoothing_coefficient)","<p>MACDを計算します。\n\n<pre>MACD = 短期(short_range日)の指数移動平均 - 長期(long_range日)の指数移動平均</pre>\n<p>data &mdash; 値の配列\n"],["modify","Jiji::Model::Trading::Order","Jiji/Model/Trading/Order.html#method-i-modify","()","<p>注文の変更を反映します。\n"],["modify","Jiji::Model::Trading::Position","Jiji/Model/Trading/Position.html#method-i-modify","()","<p>建玉の変更を反映します。\n"],["modify_order","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-modify_order","(order)","<p>注文の変更を反映します。\n<p>order &mdash; 注文\n\n"],["modify_position","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-modify_position","(position)","<p>建玉の変更を反映します。\n<p>position &mdash; 建玉\n\n"],["momentum","Signals","Signals.html#method-i-momentum","(data)","<p>一定期間の値の傾きを計算します。\n<p>data &mdash; 値の配列\n<p>戻り値 &mdash; 傾き。0より大きければ上向き。小さければ下向き。\n"],["new","Cross","Cross.html#method-c-new","()","<p>コンストラクタ\n"],["new","Jiji::Model::Agents::Agent::Property","Jiji/Model/Agents/Agent/Property.html#method-c-new","(id, name, default_value = nil)","<p>コンストラクタ\n<p>id &mdash; プロパティID\n<p>name &mdash; UIでの表示名\n"],["new","Signals::BollingerBands","Signals/BollingerBands.html#method-c-new","(range = 25, pivot = [0, 1, 2], &block)","<p>コンストラクタ\n<p>range &mdash; 集計期間\n<p>pivot &mdash; ピボット\n"],["new","Signals::DMI","Signals/DMI.html#method-c-new","(range = 14)","<p>コンストラクタ\n<p>range &mdash; 集計期間\n\n"],["new","Signals::ExponentialMovingAverage","Signals/ExponentialMovingAverage.html#method-c-new","(range = 25, smoothing_coefficient = 0.1)","<p>コンストラクタ\n<p>range &mdash; 集計期間\n<p>smoothing_coefficient &mdash; 平滑化係数\n"],["new","Signals::MACD","Signals/MACD.html#method-c-new","(short_range = 12, long_range = 26, signal_range = 9, smoothing_coefficient = 0.1)","<p>コンストラクタ\n<p>short_range &mdash; 短期EMAの集計期間\n<p>long_range &mdash; 長期EMAの集計期間\n"],["new","Signals::ROC","Signals/ROC.html#method-c-new","(range = 14)","<p>コンストラクタ\n<p>range &mdash; 集計期間\n\n"],["new","Signals::RSI","Signals/RSI.html#method-c-new","(range = 14)","<p>コンストラクタ\n<p>range &mdash; 集計期間\n\n"],["new","Signals::RangeSignal","Signals/RangeSignal.html#method-c-new","(range = 25)","<p>コンストラクタ\n<p>range &mdash; 集計期間\n\n"],["next_data","Cross","Cross.html#method-i-next_data","(fast, lazy)","<p>次の値を渡し、状態を更新します。\n<p>fast &mdash; 先行指標\n<p>lazy &mdash; 遅行指標\n"],["next_data","Signals::RangeSignal","Signals/RangeSignal.html#method-i-next_data","(data)","<p>次のデータを受け取って指標を返します。\n<p>data &mdash; 次のデータ\n<p>戻り値 &mdash; 指標。十分なデータが蓄積されていない場合nil\n"],["next_tick","Jiji::Model::Agents::Agent","Jiji/Model/Agents/Agent.html#method-i-next_tick","(tick)","<p>レート情報が通知されるメソッドです。\n<p>エージェントが動作している間順次呼び出されます。\n<p>このメソッドをオーバーライドして、シグナルの計算や取り引きを行うロジック を実装します\n"],["orders","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-orders","()","<p>注文一覧を取得します\n<p>戻り値 &mdash; Order の配列\n\n"],["pairs","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-pairs","()","<p>通貨ペアの一覧を取得します\n<p>戻り値 &mdash; Pair の配列\n\n"],["positions","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-positions","()","<p>建玉一覧を取得します\n<p>戻り値 &mdash; Positions\n\n"],["post_create","Jiji::Model::Agents::Agent","Jiji/Model/Agents/Agent.html#method-i-post_create","()","<p>エージェントの登録後に1度だけ呼び出される関数です。\n<p>コンストラクタと違い、このメソッド内ではbrokerやgraph_factory,logger 等が使用可能です。\n\n"],["properties=","Jiji::Model::Agents::Agent","Jiji/Model/Agents/Agent.html#method-i-properties-3D","(properties)","<p>プロパティを設定します。\n<p>properties &mdash; プロパティIDをキー、プロパティ値を値とするハッシュ\n\n"],["property_infos","Jiji::Model::Agents::Agent","Jiji/Model/Agents/Agent.html#method-c-property_infos","()","<p>設定可能なプロパティの一覧を返します。\n<p>必要に応じて実装してください。\n\n<p>戻り値 &mdash; Jiji::Model::Agents::Agent::Property の配列\n"],["push_notification","Jiji::Model::Notification::Notificator","Jiji/Model/Notification/Notificator.html#method-i-push_notification","( message = '', actions = [], note = nil, options = nil)","<p>Push通知を送信します。\n\n<pre>notifier.push_notification(&#39;メッセージ&#39;)\n\n# アクションを指定\nnotifier.push_notification(&#39;メッセージ&#39;,  [\n ...</pre>\n"],["refresh_account","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-refresh_account","()","<p>for internal use.\n"],["restore_state","Jiji::Model::Agents::Agent","Jiji/Model/Agents/Agent.html#method-i-restore_state","(state)","<p>保存された状態データから、状態を復元します。\n<p>必要に応じてオーバーライドしてください。\n\n<p>state &mdash; 状態データ\n"],["restore_state","Signals::DMI","Signals/DMI.html#method-i-restore_state","(state)",""],["restore_state","Signals::MACD","Signals/MACD.html#method-i-restore_state","(state)",""],["retrieve_rates","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-retrieve_rates","(pair_name, interval, start_time, end_time)","<p>指定した期間、通貨ペアのレート情報(4本値 + 出来高)を取得します。 一度に最大5000件のデータを取得できます。\n<p>pair_name &mdash; 取得対象の通貨ペア名 例) :USDJPY, :EURJPY\n<p>interval … &mdash; "],["roc","Signals","Signals.html#method-i-roc","(data)","<p>ROCを計算します。\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ROC</span> = <span class=\"ruby-constant\">Rate</span> <span class=\"ruby-identifier\">of</span> <span class=\"ruby-constant\">Change。変化率。正なら上げトレンド、負なら下げトレンド。</span>\n</pre>\n<p>data &mdash; 値の配列\n"],["rsi","Signals","Signals.html#method-i-rsi","(data)","<p>RSIを計算します。\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">RSI</span> =\n <span class=\"ruby-identifier\">n日間の値上がり幅合計</span> <span class=\"ruby-operator\">/</span> (<span class=\"ruby-identifier\">n日間の値上がり幅合計</span> <span class=\"ruby-operator\">+</span> <span class=\"ruby-identifier\">n日間の値下がり幅合計</span>) <span class=\"ruby-operator\">*</span> <span class=\"ruby-value\">100</span>\n<span class=\"ruby-identifier\">nとして、14や9を使うのが、一般的。30以下では売られすぎ70以上では買われすぎの水準</span>\n</pre>\n"],["sell","Jiji::Model::Trading::Brokers::BrokerProxy","Jiji/Model/Trading/Brokers/BrokerProxy.html#method-i-sell","(pair_name, units, type = :market, options = {})","<p>売り注文を行います\n<p>pair_name &mdash; 通貨ペア名\n<p>units &mdash; 注文単位\n"],["setup_data_savers","Jiji::Model::Graphing::Graph","Jiji/Model/Graphing/Graph.html#method-i-setup_data_savers","(saving_interval)",""],["state","Jiji::Model::Agents::Agent","Jiji/Model/Agents/Agent.html#method-i-state","()","<p>エージェントの状態を返します。\n<p>システム停止時に呼び出されます。返された値は、次回システムを起動したときに、 restore_state の引数で渡されます。\n<p>状態はMongoid#Hash として永続化されます。#Hashに格納できない型を返却すると …\n"],["state","Signals::DMI","Signals/DMI.html#method-i-state","()",""],["state","Signals::MACD","Signals/MACD.html#method-i-state","()",""],["tick","Jiji::Model::Trading::Brokers::AbstractBroker","Jiji/Model/Trading/Brokers/AbstractBroker.html#method-i-tick","()","<p>現在のレートを取得します\n<p>戻り値 &mdash; Tick\n\n"],["to_h","Jiji::Model::Agents::Agent::Property","Jiji/Model/Agents/Agent/Property.html#method-i-to_h","()",""],["up?","Cross","Cross.html#method-i-up-3F","()","<p>上昇トレンド中かどうか判定します。\n<p>戻り値 &mdash; 「先行指標 &gt; 遅行指標」 ならtrue\n\n"],["values","Jiji::Model::Agents::Agent::Property","Jiji/Model/Agents/Agent/Property.html#method-i-values","()",""],["vector","Signals","Signals.html#method-i-vector","(data)","<p>最小二乗法で、一定期間の値の傾きを計算します。\n<p>data &mdash; 値の配列\n<p>戻り値 &mdash; 傾き。0より大きければ上向き。小さければ下向き。\n"],["wma","Signals","Signals.html#method-i-wma","(data)","<p>加重移動平均値を計算します。\n<p>data &mdash; 値の配列。\n<p>戻り値 &mdash; 加重移動平均値\n"]]}}